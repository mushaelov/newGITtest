import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

/**
 * 
 * @author michael,A class which has only one method.The method 
 * determines whether a number is a prime number or not whithin
 * a certain amount of time.
 *
 */
public class Ex3 implements Callable<Boolean>{
	/**
	 * 
	 * Function get 2 parameters,A long number and a double variable
	 * which limits the time to do the calculation.
	 */
	public boolean isPrime(long n, double maxTime) throws RuntimeException, InterruptedException, ExecutionException, TimeoutException{
		double stam=maxTime*1000;
		long tempor=(long) (stam);
		int a=Runtime.getRuntime().availableProcessors();
		ExecutorService service=Executors.newFixedThreadPool(a);
		Future<Boolean> fut=service.submit(new Ex3() {

			@Override
			public Boolean call() throws Exception {
				// TODO Auto-generated method stub
			boolean gg=Ex3_tester.isPrime(n);
				return gg;
				
			}
			
		});
		Boolean t=fut.get(tempor,TimeUnit.MILLISECONDS);
		
		service.shutdown();
		
		return t;
		
		
	
		
		
		
		
		
		
}

	@Override
	public Boolean call() throws Exception {
		// TODO Auto-generated method stub
	return null;
		
	}
	
	
	
	
	
}
